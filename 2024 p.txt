Engineering Ability
Excellent programming language capability to solve the Race Condition problem encountered in multi-processing and multi-threading, and further standardize the output results of different Skills in SkillLib to accelerate the speed and convenience of users' investigation.
Apply mathematical and information theory knowledge to replace the Manhattan distance in the existing program with the Hamming distance, thereby enhancing the program's execution efficiency.

Skill Set
Strong data analysis skills to help the team identify improvement points in ML learning and conduct multiple simulations and experiments. I also pointed out learning difficulties in the data, such as inconsistent machine behavior, too diffuse specific combinations, etc.
Efficient Python program development skills to help the team quickly develop the tools we need to troubleshoot various issues, e.g. efficient label tools, KPI calculation tools for specific stages.

Engineering Development Approach
Refactoring existing programs to increase maintainability and robustness, abstracting existing program frameworks into a generic pipeline to improve the program development process, reducing the original development process from over 2 weeks to 3 days.
Modularize the current program structure and provide a common service feature to allow teams to conduct quick POCs.
Implement the Producer and Consumer Model in FirstLot Prediction to improve the overall program efficiency through concurrency.

Code Review
This year, I've pushed over 21 commits through review and testing, and all of them have been merged. 61 code reviews in FirstLot Prediction and 47 in SkillLib have been performed 有為, 翔宇, and others

Collaborated with FAB 21 蔡為智 to complete the setup and testing of FirstLot Prediction in FAB 21.
Collaborated with TPOD 庭萱 to complete the setup and testing of CDSC in FAB 20 and FAB 21, and upgraded the Kernel of 6 FABs.
Collaborated with XXX 陳正豪 to complete the migration of Nas from OKD to TKS.

Execution
1. Accelerated FirstLot Prediction
By optimizing the program architecture and algorithms, the program can achieve a significant increase in computing speed, up to 400%, while also reducing memory usage by 70%.
The program is capable of completing the calculation of several stages that were unable to be completed within the specified time limit.
This includes the use of a faster Hamming distance than Manhattan distance, more efficient function design, optimization of the calculation process, and other methods.

2. K-shift Detection
Model-based algorithm for Tool k-shift detection across multiple stages, saving 20% of manpower in confirming whether Tool k-shift or drifting occurs.

3. Monitor FirstLot Prediction


Communication
Acting as the department's recreation officer, assisting the department in planning outting and implementing various activities
Shared my Troubleshooting experience with 亭安 to help finalize the design of the duty SOP.
Collaborate with 有為 to scan the secret of all the team's projects in order to remediate and prevent key leakage.


Engineering Ability
Excellent programming language capability to solve the Race Condition problem encountered in multi-processing and multi-threading, and further standardize the output results of different Skills in SkillLib to accelerate the speed and convenience of users' investigation.
Apply mathematical and information theory knowledge to replace the Manhattan distance in the existing program with the Hamming distance, thereby enhancing the program's execution efficiency.

優秀的程式語言能力，解決在多進程和多線程中，遇到的Race Condition問題，進而統整出SkillLib中不同Skill的輸出結果，加速使用者查案的速度和便利性
Excellent programming language capability to solve the Race Condition problem encountered in multi-processing and multi-threading, and further standardize the output results of different Skills in SkillLib to accelerate the speed and convenience of users' investigation.

活用數學和information theory中的知識，將漢明距離取代舊有程式中的曼哈頓距離，提升程式的執行效率
Apply mathematical and information theory knowledge to replace the Manhattan distance in the existing program with the Hamming distance, thereby enhancing the program's execution efficiency.


Skill Set
Strong data analysis skills to help the team identify improvement points in ML learning and conduct multiple simulations and experiments. I also pointed out learning difficulties in the data, such as inconsistent machine behavior, too diffuse specific combinations, etc.
Efficient Python program development skills to help the team quickly develop the tools we need to troubleshoot various issues, e.g. efficient label tools, KPI calculation tools for specific stages.

強大的資料分析技能，幫助團隊找出ML學習的改善點，並執行多次模擬、實驗。並指出數據中存在的學習難點，諸如機台行為不一致、特定組合過於發散等等。
Strong data analysis skills to help the team identify improvement points in ML learning and conduct multiple simulations and experiments. I also pointed out learning difficulties in the data, such as inconsistent machine behavior, too diffuse specific combinations, etc.

有效率的Python程式開發能力，協助團隊快速開發需要的工具，排除多次Issue，例如方便的標註工具、特定Stage的KPI計算工具
Efficient Python program development skills to help the team quickly develop the tools we need to troubleshoot various issues, e.g. efficient label tools, ideal data generator.


Engineering Development Approach
Refactoring existing programs to increase maintainability and robustness, abstracting existing program frameworks into a generic pipeline to improve the program development process, reducing the original development process from over 2 weeks to 3 days.
Modularize the current program structure and provide a common service feature to allow teams to conduct quick POCs.
Implement the Producer and Consumer Model in FirstLot Prediction to improve the overall program efficiency through concurrency.

重構現有的程式以增加可維護性和強健性，重構現有的程式框架成通用的流水線來增加程式開發流程，讓原本需要2週以上的開發過程，能夠縮短到3天內完成。
Refactoring existing programs to increase maintainability and robustness, abstracting existing program frameworks into a generic pipeline to improve the program development process, reducing the original development process from over 2 weeks to 3 days.

模塊化目前的程式架構，推出common service的功能，讓團隊能夠進行快速的POC
Modularize the current program structure and provide a common service feature to allow teams to conduct quick POCs.

在FirstLot Prediction中實現Producer and Consumer Model，透過Concurrency讓整體程式的效率得到提升
Implement the Producer and Consumer Model in FirstLot Prediction to improve the overall program efficiency through concurrency.

Code Review
This year, I've pushed over 21 commits through review and testing, and all of them have been merged. 61 code reviews in FirstLot Prediction and 47 in SkillLib have been performed on 有為, 翔宇, and others.
今年已經push超過21個commit並通過review和測試，皆已merge。我對有為、翔宇等人在SOC中執行61次code review, SkillLib中執行47次

Team Collaboration
Collaborated with FAB 21 蔡為智 to complete the setup and testing of FirstLot Prediction in FAB 21.
Collaborated with TPOD 庭萱 to complete the setup and testing of CDSC in FAB 20 and FAB 21, and upgraded the Kernel of 6 FABs.
Collaborated with XXX 陳正豪 to complete the migration of Nas from OKD to TKS.

與FAB 21 蔡為智合作，完成FirstLot Prediction在FAB 21的Fan out設定以及測試
與TPOD 庭萱合作，完成CDSC在FAB 20和FAB 21的Fan out設定以及測試，並升級了6個FAB的Kernel升級
與XXX 陳正豪合作，完成傳輸使用的Nas從OKD遷移到TKS


Execution
1. Accelerated FirstLot Prediction
By optimizing the program architecture and algorithms, the program can achieve a significant increase in computing speed, up to 400%, while also reducing memory usage by 70%.
The program is capable of completing the calculation of several stages that were unable to be completed within the specified time limit.
This includes the use of a faster Hamming distance than Manhattan distance, more efficient function design, optimization of the calculation process, and other methods.

2. K-shift Detection
Model-based algorithm for Tool k-shift detection across multiple stages, saving 20% of manpower in confirming whether Tool k-shift or drifting occurs.

3. Monitor FirstLot Prediction



1. 加速版FirstLot Prediction
藉由多項程式架構、算法的改良讓程式運算速度提升400%以上，並節省70%的記憶體使用量。
讓原本無法在限定時間內計算完的數道Stage能夠在完成計算。
包含使用相較曼哈頓距離計算較為快速的漢明距離、使用更高效的function設計、優化計算流程等等方法
By optimizing the program architecture and algorithms, the program can achieve a significant increase in computing speed, up to 400%, while also reducing memory usage by 70%.
The program is capable of completing the calculation of several stages that were unable to be completed within the specified time limit.
This includes the use of a faster Hamming distance than Manhattan distance, more efficient function design, optimization of the calculation process, and other methods.

2. Tool K-shift Detection
藉由model-based的算法，進行全廠區跨越多道Stage的Tool k-shift detection，節省20%的人力在確認Tool是否有發生k-shift或者drifting的現象
Model-based algorithm for Tool k-shift detection across multiple stages, saving 20% of manpower in confirming whether Tool k-shift or drifting occurs.


3. Monitor FirstLot Prediction


Communication
Acting as the department's recreation officer, assisting the department in planning outting and implementing various activities
Shared my Troubleshooting experience with 亭安 to help finalize the design of the duty SOP.
Collaborate with 有為 to scan the secret of all the team's projects in order to remediate and prevent key leakage.

擔任部門的康樂，協助部門規劃Outting和推行各類活動
Acting as the department's recreation officer, assisting the department in planning outting and implementing various activities
於亭安分享我解決問題時的經驗，協助完成值班SOP的設計
Shared my Troubleshooting experience with 亭安 to help finalize the design of the duty SOP.
與有為合作掃描團隊所有Project的secret，偵測密鑰，以補救及防止密鑰洩漏
Collaborate with 有為 to scan the secret of all the team's projects in order to remediate and prevent key leakage.